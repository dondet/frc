// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#ifndef SUBDRIVEBASE_H
#define SUBDRIVEBASE_H
#include "Commands/Subsystem.h"
#include "WPILib.h"
#include "AHRS.h"

/**
 *
 *
 * @author ExampleAuthor
 */
class SubDriveBase: public frc::Subsystem {
private:
	// It's desirable that everything possible is private except
	// for methods that implement subsystem capabilities
	std::shared_ptr<WPI_TalonSRX> tnxFrontRight;
	std::shared_ptr<WPI_TalonSRX> tnxFrontLeft;
	std::shared_ptr<frc::DifferentialDrive> difDrive;
	std::shared_ptr<WPI_TalonSRX> tnxBackLeft;
	std::shared_ptr<WPI_TalonSRX> tnxBackRight;
	std::shared_ptr<AHRS> NavX;

//	PIDController* turnController;
//	PIDController* driveController;
//	EncoderDistanceSource* distanceSource;
//	double P = 0.1;
//	double I = 0;
//	double D = 0;

public:
	SubDriveBase();
	void InitDefaultCommand() override;
	void Periodic() override;
	void JoyStickDrive(std::shared_ptr<frc::Joystick> SunFlower);
	double GetEncoderDistance();
	void AutoDrive(double Speed);
	void ResetEncoder();
	double GetAngle();
	void AutoTurn();
};

#endif
