


#include "ctre/Phoenix.h"


#include "SubDriveBase.h"
#include "../RobotMap.h"
#include <iostream>
#include "../Commands/CmdJoyStickDrive.h"

SubDriveBase::SubDriveBase() : frc::Subsystem("SubDriveBase") {
    tnxFrontRight = RobotMap::subDriveBaseTnxFrontRight;
    tnxFrontLeft = RobotMap::subDriveBaseTnxFrontLeft;
    difDrive = RobotMap::subDriveBaseDifDrive;
    tnxBackLeft = RobotMap::subDriveBaseTnxBackLeft;
    tnxBackRight = RobotMap::subDriveBaseTnxBackRight;
}

void SubDriveBase::InitDefaultCommand() {
    // Set the default command for a subsystem here.
    // SetDefaultCommand(new MySpecialCommand());
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        SetDefaultCommand(new CmdJoyStickDrive());
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
}

void SubDriveBase::Periodic() {
    // Put code here to be run every loop
}

void SubDriveBase::JoyStickDrive(std::shared_ptr<frc::Joystick> SunFlower){
	float Speed = SunFlower->GetY();
	float Turn = SunFlower->GetX();
	difDrive->ArcadeDrive(Speed, Turn);

}

double SubDriveBase::GetEncoderDistance(){
	double EncoderTics;
	EncoderTics = tnxBackLeft->GetSelectedSensorPosition(0);
	double WheelRotations;
	WheelRotations = EncoderTics/80;
	double Theamountofmetersgoneby;
	Theamountofmetersgoneby = WheelRotations * 0.3192;

	//MUST ACCOUNT FOR GEARBOX

	return Theamountofmetersgoneby;
}

void SubDriveBase::AutoDrive(double Speed){
	std::cout << "Running at speed " << Speed << std::endl;
	difDrive->ArcadeDrive(Speed, 0);

}
